using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class DemonCowboy : MonoBehaviour
{
    //Hold Variables
    public float enemyHP;
    [SerializeField] float Speed;
    bool facingRight = true;


    //Hold Components
    Rigidbody2D rb;
    //Animator anim;


    //patrol nodes;
    public Transform leftNode;
    public Transform rightNode;


    //gun fun
    public Transform shotpoint;
    public GameObject shot;

    public GameObject bullet;
    public float bulletspeed = 20;

    public Transform lineOfSight;
    float losRadius = 3f;
    public LayerMask whatIsPlayer;
    public bool playerinRange = false;
    bool inCombat = false;
    float disengage = 5;


    public float rateOfFire = 2;
    public bool canFire = true;




    // Use this for initialization
    void Start()
    {
        //reference components
        rb = GetComponent<Rigidbody2D>();
        //anim = GetComponent<Animator>();




    }

    private void FixedUpdate()
    {
        playerinRange = Physics2D.OverlapCircle(lineOfSight.position, losRadius, whatIsPlayer);
        if (playerinRange)
        {
            inCombat = true;
            disengage = 5;
            rb.velocity = new Vector2(0, rb.velocity.y);
        }
        if (inCombat && !playerinRange)
        {
            disengage -= Time.deltaTime;
            if (disengage <= 0)
            {
                inCombat = false;
            }
        }
    
        if (!canFire)
        {
            rateOfFire -= Time.deltaTime;
            if (rateOfFire <= 0)
            {
                canFire = true;
            }
        }

        
        /**
        anim.SetBool("Ground", grounded);
        anim.SetFloat("vSpeed", rb.velocity.y);
        */
        if (!inCombat)
        {
            float move = 1;
            /**
            anim.SetBool("Running", true);
             */
            rb.velocity = new Vector2(move * Speed, rb.velocity.y);

            if (transform.position.x >= rightNode.position.x && facingRight)
            {
                Flip();
                Speed *= -1;
            }
            else if (transform.position.x <= leftNode.position.x && !facingRight)
            {
                Flip();
                Speed *= -1;
            }
            if (move == 0)
            {
                //anim.SetBool("Running", false);
            }
        }
        
    }
    void Flip()

    {
        facingRight = !facingRight;
        Vector3 theScale = transform.localScale;
        theScale.x *= -1;
        transform.localScale = theScale;

    }
    private void Update()
    {
        
        Shoot();
        Die();
       
    }

    private void Shoot()
    {

        if (inCombat)
        {
            if (canFire)
            {
                if (facingRight)
                {
                    shot = Instantiate(bullet, new Vector3(shotpoint.position.x, shotpoint.position.y, shotpoint.position.z), transform.rotation);

                    shot.GetComponent<Rigidbody2D>().AddForce(transform.right * bulletspeed);

                    Debug.Log("2");
                }
                if (!facingRight)
                {
                    shot = Instantiate(bullet, new Vector3(shotpoint.position.x, shotpoint.position.y, shotpoint.position.z), transform.rotation);

                    shot.GetComponent<Rigidbody2D>().AddForce(transform.right * -bulletspeed);

                    Debug.Log("3");
                }
                canFire = false;
                rateOfFire = 2;
            }


        }
    }
    private void Die()
    {
        if (enemyHP <= 0)
        {
            Destroy(this.gameObject);
        }
    }

    private void OnCollisionEnter2D(Collision2D other)
    {
        if (other.gameObject.CompareTag("Bullet"))
        {
            takeDamage();
            Destroy(other.gameObject);
        }

        
    }
    void takeDamage()
    {
        enemyHP--;
    }
}


